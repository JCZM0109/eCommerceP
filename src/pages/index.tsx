import Head from 'next/head'

import { GetServerSidePropsContext } from 'next';


import { TopBar } from '@/components/TopBar';
import { Header } from '@/components/Header';



import * as React from 'react';
import { HomeHeroCategories } from '@/components/HomeHeroCategories';
import { Categories } from '@/models/Categories';
import { Box, Container, Grid, SimpleGrid } from '@chakra-ui/react';
import { AdvantageSection } from '@/components/AdvantageSection';
import { ProductCard } from '@/components/ProductCard';


//array con estos campos
export type Product = {
  id: number;
  title: string;
  price: number;
  description: string;
  category: string;
  image: string;
  rating: {
    count: number;
    rate: number;
  }
}


type Props = {
  products: Product[],
  categories: Categories[]
}

//Componente de react, la pagina es todo un componente.


export default function CompReactexportado({ products, categories }: Props) {
  //render con react es con map, se cogieron los productos de los props exportados directamente (iteraciones)
  return (
    <>
      <Head>
        <title>eCommerce Project</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <TopBar />
      <Box marginBottom={{ base: "0", lg: "32px" }}>
        <Header />
      </Box>
      <main>
        <Container size={{
          lg: "lg",
        }}>
          <HomeHeroCategories categories={categories}></HomeHeroCategories>
          <AdvantageSection />
        </Container>

        <Container
          maxW={{
            base: "100%",
            md: "1110px",
          }} paddingX="0">
          {<Grid
            gridTemplateColumns={{
              base: "repeat(auto-fit, 255px)",
              lg: "repeat(auto-fit, minmax(255px, 1fr))"
            }}
            gap="1.85rem" gridAutoFlow={{
              base: 'column',
              lg: 'unset'
            }} gridAutoColumns="255px"
            gridAutoRows="1fr"
            alignItems="stretch"
            scrollSnapType="x mandatory"
            overflowX="scroll">
            {products.map((product, i) => {
              return <Box key={product.id}
                marginLeft={
                  {
                  //this is to give a style to the first element of the grid only, notation: if i === 0(first rendered element) then first child will have 1rem the rest 0
                  base: i === 0 ? "1rem" : "0",
                  md: "0",
                }
              }
                scrollSnapAlign="center"
                border="solid 2px"
                borderColor="gray.400"
                padding=".5rem">
                <ProductCard {...product} />
              </Box>
            })}
          </Grid>}
        </Container>

      </main>
    </>
  )
}
//esta parte del código se ejecuta en el servidor, se está tratando de obtener el contenido antes de cargar la página.
export async function getServerSideProps(context: GetServerSidePropsContext): Promise<{ props: { products: any; categories: any; }; }> {

  const products = await fetch('https://fakestoreapi.com/products')
    .then(res => res.json())

  const categories = await fetch('https://fakestoreapi.com/products/categories')
    .then(res => res.json())

  console.log(categories);
  return {
    props: {
      products,
      categories
    }
  }
}